name: Tests Windows x64

on:
  push:
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '_clang-format'
      - 'README.md'
      - 'test.runsettings'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x64]
        mode: [release]
        test: [cdm_test_direction, cdm_test_matrix3, cdm_test_matrix4, cdm_test_perspective, cdm_test_plane, cdm_test_quaternion, cdm_test_segment3, cdm_test_static_pi_fraction_cos, cdm_test_static_pi_fraction_sin, cdm_test_static_pi_fraction_tan, cdm_test_transform3, cdm_test_transform3__multiplication, cdm_test_transform3__translation, cdm_test_value_domain, cdm_test_vector2, cdm_test_vector3, cdm_test_vector4]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # for tags and commit info

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=$(pwd)/xmake-global" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@dev

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake.exe repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "::set-output name=hash::$(xmake.exe dephash)"

    # Cache xmake dependencies
    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v2
      with:
        path: xmake-global\.xmake\packages
        key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake.exe config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes --verbose

    # Build the tests
    - name: Build cdm tests
      run: xmake.exe build ${{ matrix.test }}

    # Run the tests
    - name: Run cdm tests
      run: xmake.exe run ${{ matrix.test }}
